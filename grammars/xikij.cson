'fileTypes': [
  'xikij'
]
'name': 'Xikij'
'scopeName': 'source.xikij'
'injectionSelector': 'text, text markup.raw, source string.heredoc, source string.double.heredoc, source string.quoted.double.heredoc, source comment.block'
'macros':
  'lbNoBackslash': '(?<!\\\\)'
  'laNotIndented': '(?!\\1\\s|\\n)'
  'lbLeftPathSep': '(?<=/|\\s)'
  'csonNumeric': '\\b((0([box])[0-9a-fA-F]+)|([0-9]+(\\.[0-9]+)?(e[+\\-]?[0-9]+)?))\\b'
  'csonTrue': '\\b(true|on|yes)\\b'
  'csonFalse': '\\b(false|off|no)\\b'
  'csonNull': '\\b(null)\\b'
  'laCson': '(?=(?:""".*|\'\'\'.*|".*"|\'.*\'|\\b((0([box])[0-9a-fA-F]+)|([0-9]+(\\.[0-9]+)?(e[+\\-]?[0-9]+)?))\\b|\\b(true|on|yes)\\b|\\b(false|off|no)\\b|\\b(null)\\b)\\s*$)'
'patterns': [
  {
    'match': '^(\\s*)(\\+)\\s(.*)$'
    'captures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
  }
  {
    'match': '^(\\s*)(~~|~)(\\/.*|$)'
    'captures':
      '2':
        'name': 'variable.language.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
  }
  {
    'match': '^(\\s*)(\\.\\.)(\\/.*|$)'
    'captures':
      '2':
        'name': 'constant.directory.parent.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
  }
  {
    'match': '^(\\s*)(\\.)(\\/.*|$)'
    'captures':
      '2':
        'name': 'constant.directory.current.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
  }
  {
    'begin': '^(\\s*)(?=(?:""".*|\'\'\'.*|".*"|\'.*\'|\\b((0([box])[0-9a-fA-F]+)|([0-9]+(\\.[0-9]+)?(e[+\\-]?[0-9]+)?))\\b|\\b(true|on|yes)\\b|\\b(false|off|no)\\b|\\b(null)\\b)\\s*$)'
    'applyEndPatternLast': true
    'end': '(?=[\\s\\S])'
    'patterns': [
      {
        'include': '#cson'
      }
    ]
  }
  {
    'begin': '^(\\s*)([\\w\\-]+)(:)\\s+(?=(?:""".*|\'\'\'.*|".*"|\'.*\'|\\b((0([box])[0-9a-fA-F]+)|([0-9]+(\\.[0-9]+)?(e[+\\-]?[0-9]+)?))\\b|\\b(true|on|yes)\\b|\\b(false|off|no)\\b|\\b(null)\\b)\\s*$)'
    'beginCaptures':
      '2':
        'name': 'entity.name.xikij'
      '3':
        'name': 'keyword.operator.definition.xikij'
    'patterns': [
      {
        'include': '#cson'
      }
    ]
    'applyEndPatternLast': true
    'end': '(?=[\\s\\S])'
  }
  {
    'match': '^(\\s*)([\\w\\-]+)(:)(?=\\s|$)'
    'captures':
      '2':
        'name': 'entity.name.xikij'
      '3':
        'name': 'keyword.operator.definition.xikij'
    'patterns': [
      {
        'include': '#cson'
      }
    ]
    'applyEndPatternLast': true
    'end': '(?=[\\s\\S])'
  }
  {
    'match': '^\\s*(\\/.*)$'
    'captures':
      '1':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
  }
  {
    'match': '^\\s*((!) .*)'
    'captures':
      '1':
        'name': 'keyword.operator.xikij'
      '2':
        'name': 'error.exception.xikij'
  }
  {
    'include': '#shellCommand'
  }
  {
    'contentName': 'meta.embedded.block.source.python.xikij'
    'begin': '^(\\s*)(-)\\s(.*/|).*\\.py$'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
    'patterns': [
      {
        'include': 'source.python'
      }
    ]
    'end': '^(?!\\1\\s|\\n)'
  }
  {
    'contentName': 'meta.embedded.block.source.coffee.xikij'
    'begin': '^(\\s*)(-)\\s(.*/|).*\\.coffee$'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
    'patterns': [
      {
        'include': 'source.coffee'
      }
    ]
    'end': '^(?!\\1\\s|\\n)'
  }
  {
    'contentName': 'meta.embedded.block.source.coffee.xikij'
    'begin': '^(\\s*)(-)\\s(.*/|).*\\.cson$'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
    'patterns': [
      {
        'include': 'source.coffee'
      }
    ]
    'end': '^(?!\\1\\s|\\n)'
  }
  {
    'contentName': 'meta.embedded.block.source.json.xikij'
    'begin': '^(\\s*)(-)\\s(.*/|).*\\.json$'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
    'patterns': [
      {
        'include': 'source.json'
      }
    ]
    'end': '^(?!\\1\\s|\\n)'
  }
  {
    'contentName': 'meta.embedded.block.source.cpp.xikij'
    'begin': '^(\\s*)(-)\\s(.*/|).*\\.(cc|cxx|cpp|hh|hxx|hpp|inc|inl|imp|impl)$'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
    'patterns': [
      {
        'include': 'source.cpp'
      }
    ]
    'end': '^(?!\\1\\s|\\n)'
  }
  {
    'contentName': 'meta.embedded.block.source.c.xikij'
    'begin': '^(\\s*)(-)\\s(.*/|).*\\.(c|h)$'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
    'patterns': [
      {
        'include': 'source.c'
      }
    ]
    'end': '^(?!\\1\\s|\\n)'
  }
  {
    'contentName': 'meta.embedded.block.text.restructuredtext.xikij'
    'begin': '^(\\s*)(-)\\s(.*/|).*\\.rst$'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
    'patterns': [
      {
        'include': 'text.restructuredtext'
      }
    ]
    'end': '^(?!\\1\\s|\\n)'
  }
  {
    'contentName': 'meta.embedded.block.source.shell.xikij'
    'begin': '^(\\s*)(-)\\s(.*/|).*\\.sh$'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
    'patterns': [
      {
        'include': 'source.shell'
      }
    ]
    'end': '^(?!\\1\\s|\\n)'
  }
  {
    'contentName': 'meta.embedded.block.source.css.xikij'
    'begin': '^(\\s*)(-)\\s(.*/|).*\\.css$'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
    'patterns': [
      {
        'include': 'source.css'
      }
    ]
    'end': '^(?!\\1\\s|\\n)'
  }
  {
    'contentName': 'meta.embedded.block.source.html.xikij'
    'begin': '^(\\s*)(-)\\s(.*/|).*\\.html$'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
    'patterns': [
      {
        'include': 'source.html'
      }
    ]
    'end': '^(?!\\1\\s|\\n)'
  }
  {
    'contentName': 'meta.embedded.block.text.html.php.xikij'
    'begin': '^(\\s*)(-)\\s(.*/|).*\\.php$'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
    'patterns': [
      {
        'include': 'text.html.php'
      }
    ]
    'end': '^(?!\\1\\s|\\n)'
  }
  {
    'contentName': 'meta.embedded.block.source.xml.xikij'
    'begin': '^(\\s*)(-)\\s(.*/|).*\\.xml$'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
    'patterns': [
      {
        'include': 'source.xml'
      }
    ]
    'end': '^(?!\\1\\s|\\n)'
  }
  {
    'contentName': 'meta.embedded.block.source.sql.xikij'
    'begin': '^(\\s*)(-)\\s(.*/|).*\\.sql$'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
    'patterns': [
      {
        'include': 'source.sql'
      }
    ]
    'end': '^(?!\\1\\s|\\n)'
  }
  {
    'contentName': 'meta.embedded.block.source.ruby.xikij'
    'begin': '^(\\s*)(-)\\s(.*/|).*\\.rb$'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
    'patterns': [
      {
        'include': 'source.ruby'
      }
    ]
    'end': '^(?!\\1\\s|\\n)'
  }
  {
    'contentName': 'meta.embedded.block.source.makefile.xikij'
    'begin': '^(\\s*)(-)\\s(.*/|).*\\.mak$'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
    'patterns': [
      {
        'include': 'source.makefile'
      }
    ]
    'end': '^(?!\\1\\s|\\n)'
  }
  {
    'contentName': 'meta.embedded.block.source.makefile.xikij'
    'begin': '^(\\s*)(-)\\s(.*/|).*Makefile$'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
    'patterns': [
      {
        'include': 'source.makefile'
      }
    ]
    'end': '^(?!\\1\\s|\\n)'
  }
  {
    'contentName': 'meta.embedded.block.source.css.less.xikij'
    'begin': '^(\\s*)(-)\\s(.*/|).*\\.less$'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
    'patterns': [
      {
        'include': 'source.css.less'
      }
    ]
    'end': '^(?!\\1\\s|\\n)'
  }
  {
    'contentName': 'meta.embedded.block.text.markdown.xikij'
    'begin': '^(\\s*)(-)\\s(.*/|).*\\.md$'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
    'patterns': [
      {
        'include': 'text.markdown'
      }
    ]
    'end': '^(?!\\1\\s|\\n)'
  }
  {
    'contentName': 'meta.embedded.block.source.cmake.xikij'
    'begin': '^(\\s*)(-)\\s(.*/|).*\\.cmake$'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
    'patterns': [
      {
        'include': 'source.cmake'
      }
    ]
    'end': '^(?!\\1\\s|\\n)'
  }
  {
    'contentName': 'meta.embedded.block.source.cmake.xikij'
    'begin': '^(\\s*)(-)\\s(.*/|).*CMakeLists.txt$'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
      '3':
        'patterns': [
          {
            'include': '#xikijPath'
          }
        ]
    'patterns': [
      {
        'include': 'source.cmake'
      }
    ]
    'end': '^(?!\\1\\s|\\n)'
  }
  {
    'begin': '^(\\s*)(-)\\s(?=(?:""".*|\'\'\'.*|".*"|\'.*\'|\\b((0([box])[0-9a-fA-F]+)|([0-9]+(\\.[0-9]+)?(e[+\\-]?[0-9]+)?))\\b|\\b(true|on|yes)\\b|\\b(false|off|no)\\b|\\b(null)\\b)\\s*$)'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
    'applyEndPatternLast': true
    'end': '(?=[\\s\\S])'
    'patterns': [
      {
        'include': '#cson'
      }
    ]
  }
  {
    'begin': '^(\\s*)(-)\\s(?=.*$)'
    'beginCaptures':
      '2':
        'name': 'keyword.operator.xikij'
    'end': '$'
    'patterns': [
      {
        'include': '#xikijPath'
      }
    ]
  }
]
'repository':
  'xikijPath':
    'patterns': [
      {
        'match': '(\\/)'
        'name': 'punctuation.separator.path.xikij'
      }
      {
        'match': '(?<=/|\\s)(\\.\\.)(?=\\/|$)'
        'name': 'constant.directory.parent.xikij'
      }
      {
        'match': '(?<=/|\\s)(\\.)(?=\\/|$)'
        'name': 'constant.directory.current.xikij'
      }
      {
        'match': '(?<=/|\\s)(\\.\\w+)(?=\\/|$)'
        'name': 'variable.language.xikij'
      }
      {
        'match': '(\\[)(\\d+)(\\])(?=\\/|$)'
        'captures':
          '1':
            'name': 'punctuation.definition.list.begin.xikij'
          '2':
            'name': 'constant.numeric.integer.xikij'
          '3':
            'name': 'punctuation.definition.list.end.xikij'
        'name': 'meta.structure.list.xikij'
      }
    ]
  'shellCommand':
    'patterns': [
      {
        'begin': '^(\\s*)(\\$)\\s(.*)'
        'beginCaptures':
          '2':
            'name': 'keyword.operator.xikij'
          '3':
            'name': 'meta.command.xikij'
            'patterns': [
              {
                'include': 'source.shell'
              }
              {
                'match': '\\s(--?)([\\w\\-]+)(=)?'
                'captures':
                  '1':
                    'name': 'keyword.operator.xikij'
                  '2':
                    'name': 'variable.parameter.function.xikij'
                  '3':
                    'name': 'keyword.operator.assignment.xikij'
              }
            ]
        'end': '^(?!\\1\\s)'
        'patterns': [
          {
            'include': '#shellCommandOutput'
          }
        ]
      }
    ]
  'shellCommandOutput':
    'patterns': [
      {
        'match': '(?i).*\\berror\\b.*'
        'name': 'error.xikij'
      }
    ]
  'cson':
    'patterns': [
      {
        'include': '#csonSingleLineString'
      }
      {
        'match': '\\b((0([box])[0-9a-fA-F]+)|([0-9]+(\\.[0-9]+)?(e[+\\-]?[0-9]+)?))\\b\\s*$'
        'name': 'constant.numeric.xikij'
      }
      {
        'match': '\\b(true|on|yes)\\b\\s*$'
        'captures':
          '1':
            'name': 'constant.language.boolean.true.xikij'
      }
      {
        'match': '\\b(false|off|no)\\b\\s*$'
        'captures':
          '1':
            'name': 'constant.language.boolean.false.xikij'
      }
      {
        'match': '\\b(null)\\b\\s*$'
        'captures':
          '1':
            'name': 'constant.language.boolean.null.xikij'
      }
    ]
  'csonSingleLineString':
    'patterns': [
      {
        'begin': '(")(?=.*"\\s*$)'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.string.begin.xikij'
        'end': '(")'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.string.end.xikij'
        'name': 'string.quoted.double.xikij'
      }
      {
        'begin': '(\')(?=.*\'\\s*$)'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.string.begin.xikij'
        'end': '(\')'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.string.end.xikij'
        'name': 'string.quoted.single.xikij'
      }
    ]